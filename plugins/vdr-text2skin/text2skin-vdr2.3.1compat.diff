diff -ruN vdr-plugin-text2skin.orig/common.c vdr-plugin-text2skin/common.c
--- vdr-plugin-text2skin.orig/common.c	2015-09-14 22:57:00.446475999 +0200
+++ vdr-plugin-text2skin/common.c	2015-09-14 23:01:08.854638601 +0200
@@ -63,19 +63,21 @@
 
 bool StoppedTimer(const char *Name)
 {
-	cTimer *timer = Timers.First();
+        LOCK_TIMERS_READ;
+	const cTimer *timer = Timers->First();
 	while (timer) {
 		if (strcmp(Name, timer->File()) == 0)
 			break;
-		timer = Timers.Next(timer);
+		timer = Timers->Next(timer);
 	}
 	return timer == NULL || !timer->Recording();
 }
 
 const cRecording *GetRecordingByName(const char *Name)
 {
-	const cRecording *rec = Recordings.First();
-	for (; rec != NULL; rec = Recordings.Next(rec)) {
+        LOCK_RECORDINGS_READ;
+	const cRecording *rec = Recordings->First();
+	for (; rec != NULL; rec = Recordings->Next(rec)) {
 		if (strcmp(rec->Name(), Name) == 0)
 			return rec;
 	}
@@ -84,7 +86,8 @@
 
 const cRecording *GetRecordingByFileName(const char *FileName)
 {
-	return (FileName) ? Recordings.GetByName(FileName) : NULL;
+        LOCK_RECORDINGS_READ;
+	return (FileName) ? Recordings->GetByName(FileName) : NULL;
 }
 
 int GetFrontendSTR(void)
@@ -180,7 +183,8 @@
 					i++;
                                         if (r->event && r->event->StartTime() < time(NULL)) continue;
 					std::stringstream buf;
-					cChannel *channel = Channels.GetByChannelID(r->event->ChannelID(), true, true);
+                                        LOCK_CHANNELS_READ;
+					const cChannel *channel = Channels->GetByChannelID(r->event->ChannelID(), true, true);
 					if (channel)
 					buf << " - ";
 					buf << channel->ShortName(true);
diff -ruN vdr-plugin-text2skin.orig/display.c vdr-plugin-text2skin/display.c
--- vdr-plugin-text2skin.orig/display.c	2015-09-14 22:57:00.446475999 +0200
+++ vdr-plugin-text2skin/display.c	2015-09-14 22:59:16.466962330 +0200
@@ -1118,7 +1118,8 @@
 			if (ExtPresentDescription == "") {
 				// find corresponding timer
 				const char *aux = NULL;
-				for (cTimer *tim = Timers.First(); tim; tim = Timers.Next(tim))
+                                LOCK_TIMERS_READ;
+				for (const cTimer *tim = Timers->First(); tim; tim = Timers->Next(tim))
 					if (tim->Event() == mEvent)
 						aux = tim->Aux();
 				ExtPresentDescription = AddExtInfoToDescription(mEvent->Title(), mEvent->ShortText(), mEvent->Description(), aux, Text2SkinSetup.StripAux);
@@ -1201,14 +1202,16 @@
 
 	case tChannelName:
 		if (mEvent) { // extended EPG
-			cChannel *channel = Channels.GetByChannelID(mEvent->ChannelID(), true);
+                        LOCK_CHANNELS_READ;
+			const cChannel *channel = Channels->GetByChannelID(mEvent->ChannelID(), true);
 			return channel != NULL
 			       ? (cxType)ChannelName(channel, 0)
 			       : (cxType)false;
 		}
 		else if (mRecording) { // recording Info
 			cRecordingInfo *recInfo = const_cast<cRecordingInfo*>(mRecording->Info());
-			cChannel *channel = Channels.GetByChannelID(recInfo->ChannelID(), true);
+                        LOCK_CHANNELS_READ;
+			const cChannel *channel = Channels->GetByChannelID(recInfo->ChannelID(), true);
 			return channel != NULL
 			       ? (cxType)ChannelName(channel, 0)
 			       : (cxType)false;
@@ -1217,14 +1220,16 @@
 
 	case tChannelShortName:
 		if (mEvent) { // extended EPG
-			cChannel *channel = Channels.GetByChannelID(mEvent->ChannelID(), true);
+                        LOCK_CHANNELS_READ;
+			const cChannel *channel = Channels->GetByChannelID(mEvent->ChannelID(), true);
 			return channel != NULL
 			       ? (cxType)ChannelShortName(channel, 0)
 			       : (cxType)false;
 		}
 		else if (mRecording) { // recording Info
 			cRecordingInfo *recInfo = const_cast<cRecordingInfo*>(mRecording->Info());
-			cChannel *channel = Channels.GetByChannelID(recInfo->ChannelID(), true);
+                        LOCK_CHANNELS_READ;
+			const cChannel *channel = Channels->GetByChannelID(recInfo->ChannelID(), true);
 			return channel != NULL
 			       ? (cxType)ChannelShortName(channel, 0)
 			       : (cxType)false;
diff -ruN vdr-plugin-text2skin.orig/screen.h vdr-plugin-text2skin/screen.h
--- vdr-plugin-text2skin.orig/screen.h	2015-09-14 22:57:00.446475999 +0200
+++ vdr-plugin-text2skin/screen.h	2015-09-14 23:07:16.213832476 +0200
@@ -7,7 +7,7 @@
 #include <vdr/osd.h>
 
 // #undef DIRECTBLIT
-#define DIRECTBLIT
+// #define DIRECTBLIT
 
 class cText2SkinScreen {
 	/* Skin Editor */
diff -ruN vdr-plugin-text2skin.orig/status.c vdr-plugin-text2skin/status.c
--- vdr-plugin-text2skin.orig/status.c	2015-09-14 22:57:00.446475999 +0200
+++ vdr-plugin-text2skin/status.c	2015-09-14 23:04:25.903944635 +0200
@@ -110,8 +110,9 @@
 
 	mRecordingsLock.Lock();
 	mRecordings.clear();
-	cTimer *t = Timers.First();
-	for (; t != NULL; t = Timers.Next(t)) {
+        LOCK_TIMERS_READ;
+	const cTimer *t = Timers->First();
+	for (; t != NULL; t = Timers->Next(t)) {
 		if (t->Recording())
 			mRecordings.push_back(t->File());
 	}
@@ -184,9 +185,9 @@
 		mRender->mUpdate.events = false;
 
 		mEvents.Clear();
-		Timers.IncBeingEdited();
 
-		for (cTimer *tim = Timers.First(); tim; tim = Timers.Next(tim)) {
+                LOCK_TIMERS_READ;
+		for (const cTimer *tim = Timers->First(); tim; tim = Timers->Next(tim)) {
 			if (tim->HasFlags(tfActive)) {
 				int i = 0;
 				cTimer dummy;
@@ -209,7 +210,6 @@
 			}
 		}
 
-		Timers.DecBeingEdited();
 		mEvents.Sort();
 	}
 }
